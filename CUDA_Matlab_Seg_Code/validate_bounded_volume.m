function [dice_coefficient_tumor,...
          sensitivity_tumor,...
          precision_tumor, ...
          especificity_tumor,...
          ...
          ...
          dice_coefficient_edema,...
          sensitivity_edema,...
          precision_edema, ...
          especificity_edema...          
          ...
          ...
    ] ...
    = full_bounded_validation_function( segmentation,          truth,...
                                        seg_label_for_tumor,   seg_label_for_edema,...
                                        truth_label_for_tumor, truth_label_for_edema)

%get bounding limits for segmentation and truth
[lowest_i_seg,  lowest_j_seg,  lowest_k_seg, ...
 highest_i_seg, highest_j_seg, highest_k_seg] = honest_bounding_limits ( segmentation, seg_label_for_tumor, seg_label_for_edema );

[lowest_i_truth,  lowest_j_truth,  lowest_k_truth, ...
 highest_i_truth, highest_j_truth, highest_k_truth] = honest_bounding_limits( truth, truth_label_for_tumor, truth_label_for_edema );

%determine lowest/highest limits for bounds
lowest_i_bound  = min(lowest_i_seg, lowest_i_truth);  

lowest_j_bound  = min(lowest_j_seg, lowest_j_truth);  

lowest_k_bound  = min(lowest_k_seg, lowest_k_truth); 

highest_i_bound = max(highest_i_seg, highest_i_truth); 

highest_j_bound = max(highest_j_seg, highest_j_truth); 

highest_k_bound = max(highest_k_seg, highest_k_truth);

                                                        
%create bounding boxes for segmentation and truth

bounded_segmentation = segmentation (lowest_i_bound : highest_i_bound, ...
                                     lowest_j_bound : highest_j_bound,...
                                     lowest_k_bound : highest_k_bound);

bounded_truth = truth (lowest_i_bound : highest_i_bound, ...
                       lowest_j_bound : highest_j_bound,...
                       lowest_k_bound : highest_k_bound);


%S = 'validate volume - for tumor'

[tp, tn, fp, fn] = count_n_classes_3D (bounded_segmentation, bounded_truth, 3);

[   sensitivity_tumor,...
    especificity_tumor,...
    dice_coefficient_tumor,...
    jaccard_similarity_tumor, ...
    precision_tumor, ...
    recall_tumor, ...
    f1_score_tumor ...
] = calculate_metrics ( tp(1), tn(1), fp(1), fn(1) );

%S = 'validate  volume - for edema'

[   sensitivity_edema,...
    especificity_edema,...
    dice_coefficient_edema,...
    jaccard_similarity_edema, ...
    precision_edema, ...
    recall_edema, ...
    f1_score_edema ...
] = calculate_metrics ( tp(2), tn(2), fp(2), fn(2) );



end

